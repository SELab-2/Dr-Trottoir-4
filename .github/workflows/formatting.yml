name: Code Formatting and Linting

on:
  # all branches when pushing, only pull request for the main branch
  push:
    branches: ['**']
  pull_request:
    branches: [main]

jobs:
  format_and_lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # using `black`
      - name: Format Python code
        if: `find . -name '*.py' -type f | grep -q .`
        uses: docker://python:3.8
        with:
          args: |
            sh -c "pip install black && black ."

      # using `flake8`
      - name: Lint Python code
        if: `find . -name '*.py' -type f | grep -q .`
        id: python-lint
        uses: docker://python:3.8
        with:
          args: |
            sh -c "pip install flake8 && flake8 ."

      # using `prettier`
      - name: Format JavaScript code
        if: `find . -name '*.js' -type f | grep -q .`
        uses: docker://node:16
        with:
          args: |
            sh -c "npm install --global prettier && prettier --write '**/*.js'"

      # using `eslint`
      - name: Lint JavaScript code
        if: `find . -name '*.js' -type f | grep -q .`
        id: javascript-lint
        uses: docker://node:16
        with:
          args: |
            sh -c "npm install --global eslint && eslint '**/*.js'"

      # using `sqlparse`
      - name: Format SQL code
        if: `find . -name '*.sql' -type f | grep -q .`
        uses: docker://python:3.8
        with:
          args: |
            sh -c "pip install sqlparse && find . -name '*.sql' -type f -exec sh -c 'sql-formatter -f {} > {}.new && mv {}.new {}' \;"

      # using `sqlfluff`
      - name: Lint SQL code
        if: `find . -name '*.sql' -type f | grep -q .`
        id: sql-lint
        uses: docker://python:3.8
        with:
          args: |
            sh -c "pip install sqlfluff && sqlfluff lint"

      # if either one has a linting error when executing a pull request, give an error and don't allow the request
      - name: Check for linting errors
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          if [ ${{ steps.python-lint.outcome }} == 'failure' ] || [ ${{ steps.javascript-lint.outcome }} == 'failure' ] || [ ${{ steps.sql-lint.outcome }} == 'failure' ]; then
            echo "Linting failed. Please fix the errors before merging the pull request."
            exit 1
          fi

      # if no linting errors, format code and finalize request
      - name: Commit changes
        if: ${{ success() }}
        run: |
          git config --global user.email "group4@selab2.com"
          git config --global user.name "Group 4"
          if git diff --name-only | grep -E '\.py$|\.js$|\.sql$'; then
            git add .
            git commit -m "Auto-format and lint code"
            git push
          fi